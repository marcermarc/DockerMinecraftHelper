name: 'build all'

on:
  schedule:
    - cron: '0 3 * * 3'

  workflow_dispatch:

jobs:
  build-base:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tag: [jre8, jre11, jre17, jdk8, jdk11, jdk17]
    steps:
      - 
        name: checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          file: Dockerfiles/base/${{ matrix.tag }}.Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: marcermarc/minecraft:${{ matrix.tag }}
  build-versions:
    runs-on: ubuntu-latest
    needs: build-base
    strategy:
      matrix:
        include:
          # vanilla
          - type: 'vanilla'
            version: 'latest'
            baseimage: 'jre17'
          - type: 'vanilla'
            version: '1.19.2'
            baseimage: 'jre17'
          - type: 'vanilla'
            version: '1.18.2'
            baseimage: 'jre17'
          - type: 'vanilla'
            version: '1.17.1'
            baseimage: 'jre17'
          - type: 'vanilla'
            version: '1.16.5'
            baseimage: 'jre11'
          # forge
          - type: 'forge'
            version: 'latest'
            baseimage: 'jre17'
          - type: 'forge'
            version: '1.19.2'
            baseimage: 'jre17'
          - type: 'forge'
            version: '1.18.2'
            baseimage: 'jre17'
          - type: 'forge'
            version: '1.17.1'
            baseimage: 'jre17'
          - type: 'forge'
            version: '1.16.5'
            baseimage: 'jre11'
          - type: 'forge'
            version: '1.15.2'
            baseimage: 'jre11'
          - type: 'forge'
            version: '1.14.4'
            baseimage: 'jre11'
          - type: 'forge'
            version: '1.12.2'
            baseimage: 'jre8'
          - type: 'forge'
            version: '1.7.10'
            baseimage: 'jre8'
          # fabric
          - type: 'fabric'
            version: 'latest'
            baseimage: 'jre17'
          - type: 'fabric'
            version: '1.19.2'
            baseimage: 'jre17'
          - type: 'fabric'
            version: '1.18.2'
            baseimage: 'jre17'
          # paper
          - type: 'paper'
            version: 'latest'
            baseimage: 'jre17'
          - type: 'paper'
            version: '1.19.2'
            baseimage: 'jre17'
          # spigot
          - type: 'spigot'
            version: 'latest'
            baseimage: 'jre17'
          - type: 'spigot'
            version: '1.19.2'
            baseimage: 'jre17'
          
    steps:
      - 
        name: checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        if: matrix.type != 'vanilla'
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          file: Dockerfiles/${{ matrix.type }}/${{ matrix.baseimage }}.Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: marcermarc/minecraft:${{ matrix.type }}_${{ matrix.version }}
          build-args: |
            VERSION=${{ matrix.version }}
      -
        if: matrix.type == 'vanilla'
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          file: Dockerfiles/${{ matrix.type }}/${{ matrix.baseimage }}.Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: marcermarc/minecraft:${{ matrix.type }}_${{ matrix.version }},marcermarc/minecraft:${{ matrix.version }}
          build-args: |
            VERSION=${{ matrix.version }}
